version: '3.8'

services:
  cache:
    #image: redis:6.2-alpine
    image: redis:7.0-alpine
    restart: always
    ports:
      - '6379:6379'
    networks:
      - gateway
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  rabbitmq:
      #image: rabbitmq:3-management
      image: rabbitmq:3.12-management
      container_name: rabbitmq_management
      ports: 
        - 25672:25672 # (erlang) communication between the nodes and CLI tool
        - 15672:15672 # communication with the web management API 
        - 5672:5672
      networks:
        - gateway
      environment:
        - RABBITMQ_DEFAULT_USER = admin
        - RABBITMQ_DEFAULT_PASS = passw123
      restart: always

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.0
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - gateway
    environment:
      - discovery.type="single-node"
      #ES_JAVA_OPTS: "-Xms2g -Xmx2g"
      - xpack.monitoring.templates.enabled="true"
      - xpack.security.enabled=false
      
    #volumes:
    # - ./esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
      
  api:
    build:
      context: ./api
    container_name: api
    entrypoint: sh /usr/src/app/start.sh
    #command: "cd /usr/src/app/ && node index.js"
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    expose:
      - '3001'
    ports:
      - "3001:3001"
    tty: true
    networks:
      - gateway
    depends_on:
      - elasticsearch
      - rabbitmq

  crawler:
    build:
      context: ./crawler
    container_name: crawler
    entrypoint: sh /usr/src/app/start.sh
    #command: "cd /usr/src/app/ && node index.js"
    volumes:
      - ./crawler:/usr/src/app
      
    tty: true
    networks:
      - gateway
    environment:
        - RABBITMQ_DEFAULT_USER = admin
        - API_URL = http://extratoblubeapp-env.eba-mvegshhd.sa-east-1.elasticbeanstalk.com/login
        - LOGIN = konsiteste3
        - SENHA = konsiteste3

    
    depends_on:
      - elasticsearch
      - rabbitmq
      - api

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    #entrypoint: sh /usr/src/app/start.sh
    #command: "cd /usr/src/app/ && node index.js"
    volumes:
      - /app/node_modules
      - ./frontend:/app
    expose:
      - '3000'
    #ports:
    #  - "3001:3001"
    tty: true
    networks:
      - gateway
    depends_on:
      - elasticsearch
      - rabbitmq

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    tty: true
    ports:
      - "8080:8080"
    networks:
      - gateway
    depends_on:
      - api

#volumes:
#  esdata:
 #   driver: local

networks:
  gateway: {}
